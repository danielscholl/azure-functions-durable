{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "prefix": {
      "type": "string",
      "metadata": {
        "description": "Small unique string."
      },
      "minLength": 2,
      "maxLength": 9
    },
    "storageAccountType": {
      "type": "string",
      "metadata": {
        "description": "Account type, premium vs standard, and local, global redundancy"
      },
      "allowedValues": [
        "Standard_LRS",
        "Standard_GRS",
        "Premium_LRS"
      ],
      "defaultValue": "Standard_LRS"
    },
    "repoURL": {
      "type": "string",
      "metadata": {
        "description": "The URL for the GitHub repository that contains the project to deploy."
      },
      "defaultValue": "https://github.com/danielscholl/azure-functions-durable.git"
    },
    "branch": {
      "type": "string",
      "metadata": {
        "description": "The branch of the GitHub repository to use."
      },
      "defaultValue": "master"
    }
  },
  "variables": {
    "cleanUnique": "[toLower(replace(parameters('prefix'),'-', ''))]",
    "storageAccountName": "[concat(variables('cleanUnique'), uniqueString(resourceGroup().id))]",
    "storageId": "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
    "appName": "[concat(variables('cleanUnique'), uniqueString(resourceGroup().id))]",
    "hostingPlanName": "[concat(variables('appName'), '-plan')]",
    "functionAppName": "[concat(variables('appName'), '-func')]",
    "appInsightsName": "[concat(variables('appName'),'-insights')]"
  },
  "resources": [
    {
      "comments": "## Microsoft Insights ##",
      "type": "microsoft.insights/components",
      "kind": "other",
      "name": "[variables('appInsightsName')]",
      "apiVersion": "2014-04-01",
      "location": "[resourceGroup().location]",
      "tags": {},
      "scale": null,
      "properties": {
        "ApplicationId": "[variables('appInsightsName')]"
      },
      "dependsOn": []
    },
    {
      "comments": "## Storage Account ##",
      "name": "[variables('storageAccountName')]",
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2017-10-01",
      "location": "[resourceGroup().location]",
      "kind": "Storage",
      "sku": {
        "name": "[parameters('storageAccountType')]",
        "tier": "Standard"
      }
    },
    {
      "comments": "## Hosting Plan ##",
      "name": "[variables('hostingPlanName')]",
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2015-04-01",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[variables('storageId')]"
      ],
      "properties": {
        "name": "[variables('hostingPlanName')]",
        "computeMode": "Dynamic",
        "sku": "Dynamic"
      }
    },
    {
      "comments": "## Function Web Site ##",
      "name": "[variables('functionAppName')]",
      "type": "Microsoft.Web/sites",
      "kind": "functionapp",
      "apiVersion": "2016-08-01",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
        "[resourceId('microsoft.insights/components', variables('appInsightsName'))]"
      ],
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
        "clientAffinityEnabled": false,
        "siteConfig": {
          "cors": {
            "allowedOrigins": [
              "*"
            ]
          },
          "appSettings": [
            {
              "name": "AzureWebJobsDashboard",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageId'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "AzureWebJobsStorage",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageId'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageId'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "WEBSITE_CONTENTSHARE",
              "value": "[toLower(variables('functionAppName'))]"
            },
            {
              "name": "FUNCTIONS_EXTENSION_VERSION",
              "value": "beta"
            },
            {
              "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
              "value": "[reference(concat('microsoft.insights/components/', variables('appInsightsName'))).InstrumentationKey]"
            },
            {
              "name": "Host",
              "value": "[concat('https://', variables('functionAppName'), '.azurewebsites.net')]"
            },
            {
              "name": "ActivityCodes",
              "value": "10,20,30,40"
            },
            {
              "name": "ApprovalTimeoutSeconds",
              "value": 300
            }

          ]
        }
      },
      "resources": [
        {
          "comments": "## Sync from Source Control ##",
          "name": "web",
          "type": "sourcecontrols",
          "apiVersion": "2015-08-01",
          "dependsOn": [
            "[resourceId('Microsoft.Web/Sites', variables('functionAppName'))]"
          ],
          "properties": {
            "RepoUrl": "[parameters('repoURL')]",
            "branch": "[parameters('branch')]",
            "IsManualIntegration": true
          }
        }
      ]
    }
  ]
}
